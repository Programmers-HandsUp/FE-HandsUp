import InputLabel from "../InputLabel";
import { RegisterProduct } from "../../page";
import { Controller, useFormContext, useWatch } from "react-hook-form";
import InputPrice from "@/app/_component/common/InputPrice";
import { Chip, Chips } from "@/app/_component/common/Chips";
import Icon from "@/app/_component/common/Icon";
import Tooltip from "@/app/_component/common/Tooltip";
import Datepicker from "react-tailwindcss-datepicker";
import SearchAddressBtn from "../SearchAddressBtn";

const TRADEMETHOD_LIST = ["ÏßÅÍ±∞Îûò", "ÌÉùÎ∞∞"] as const;

function AuctionInfo() {
  const {
    control,
    setValue,
    register,
    formState: { errors }
  } = useFormContext<RegisterProduct>();

  let maxDate = new Date();
  maxDate.setDate(maxDate.getDate() + 7);

  const description = useWatch({ control, name: "description" });
  const inputCount = description ? description.length : 0;

  const isDirect = useWatch({ control, name: "tradeMethod" }) === "ÏßÅÍ±∞Îûò";
  const price = useWatch({ control, name: "price" });

  return (
    <div className="m-2">
      <span className="text-xl mb-4">| Í≤ΩÎß§Ï†ïÎ≥¥</span>
      <InputLabel
        name="price"
        errors={errors}>
        <Controller
          control={control}
          name="price"
          render={({ field }) => (
            <InputPrice<RegisterProduct>
              title="ÏûÖÏ∞∞ ÏãúÏûëÍ∞Ä"
              price={price}
              field={field}
              setValue={() => setValue("price", "0")}
            />
          )}
        />
      </InputLabel>
      <InputLabel
        title={
          <div className="my-3 flex items-center gap-2">
            <span>Í≤ΩÎß§ ÎßàÍ∞êÏùº</span>
            <Tooltip
              eventType="hover"
              position="right"
              content="ÏµúÏÜå 1Ïùº / ÏµúÎåÄ 7ÏùºÍπåÏßÄ ÏÑ†ÌÉù Í∞ÄÎä•Ìï¥Ïöî">
              <Icon
                id="info"
                fill="none"
                stroke="black"
              />
            </Tooltip>
          </div>
        }
        name="dateRangeTime"
        errors={errors}>
        <Controller
          control={control}
          name="dateRangeTime"
          render={({ field }) => (
            <Datepicker
              minDate={new Date()}
              maxDate={maxDate}
              placeholder={"ÎÇ†Ïßú ÏÑ†ÌÉùÌïòÍ∏∞"}
              useRange={false}
              value={field.value}
              onChange={field.onChange}
            />
          )}
        />
      </InputLabel>
      <InputLabel
        title="Í±∞Îûò Î∞©Ïãù"
        name="tradeMethod"
        errors={errors}>
        <Controller
          control={control}
          name="tradeMethod"
          render={({ field }) => (
            <Chips
              Items={field.value}
              setItems={field.onChange}
              className="pt-2">
              {TRADEMETHOD_LIST.map((method) => (
                <Chip
                  key={method}
                  value={method}
                  className="w-24">
                  {method}
                </Chip>
              ))}
            </Chips>
          )}
        />
      </InputLabel>
      {isDirect && (
        <InputLabel
          title="Í±∞Îûò Ìù¨Îßù Ïû•ÏÜå"
          name="address"
          errors={errors}>
          <Controller
            control={control}
            name="address"
            render={({ field }) => <SearchAddressBtn field={field} />}
          />
        </InputLabel>
      )}

      <InputLabel
        name="description"
        errors={errors}>
        <textarea
          {...register("description")}
          style={{ resize: "none" }}
          className="mt-4 p-4 border border-gray-200 w-full h-48 rounded-lg"
          placeholder={
            "ÏÉÅÌíà Î∞è Í≤ΩÎß§ Í¥ÄÎ†®Ìï¥ÏÑú Ï∂îÍ∞ÄÏ†ÅÏù∏ Ï†ïÎ≥¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. \nÏïàÏ†ÑÌïòÍ≥† Í±¥Ï†ÑÌïú Í±∞ÎûòÌôòÍ≤ΩÏùÑ ÎßåÎì§Ïñ¥Í∞ÄÏöî üôåüèª"
          }></textarea>
        <div className="flex justify-end">{inputCount}/1000</div>
      </InputLabel>
    </div>
  );
}

export default AuctionInfo;
